# Generated by Django 4.2.15 on 2024-11-04 10:51

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ademcoe',
            fields=[
                ('id', models.AutoField(db_column='ID', db_comment='ID', primary_key=True, serialize=False)),
                ('receivetime', models.DateTimeField(db_column='ReceiveTime', db_comment='Время приема сообщения на клие')),
                ('receivern', models.CharField(db_column='ReceiverN', db_comment='Номер сообщения??(не используе', max_length=50)),
                ('linecardgroupn', models.CharField(db_column='LineCardGroupN', db_comment='Номер линейной платы????(не ис', max_length=50)),
                ('unitn', models.CharField(db_column='UnitN', db_comment='Номер устройства', max_length=50)),
                ('messagetypeid', models.CharField(db_column='MessageTypeID', db_comment='Тип сообщения ????? Возможно н', max_length=50)),
                ('eventid', models.CharField(db_column='EventID', db_comment='Тип и номер события', max_length=50)),
                ('groupn', models.CharField(db_column='GroupN', db_comment='Номер раздела (зависит от типа', max_length=50)),
                ('sensorid', models.CharField(db_column='SensorID', db_comment='Номер зоны(или отвестенного ил', max_length=50)),
                ('basenumber', models.IntegerField(db_column='BaseNumber')),
            ],
            options={
                'db_table': 'ADEMCOE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Adtypes',
            fields=[
                ('panel', models.IntegerField(db_column='PANEL', db_comment='Тип панели или адаптера', primary_key=True, serialize=False)),
                ('desc', models.CharField(db_column='DESC', db_comment='Название', max_length=250)),
            ],
            options={
                'db_table': 'ADTYPES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Aesevents',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('aescode', models.CharField(db_column='AESCODE', max_length=10)),
                ('name', models.CharField(db_column='NAME', max_length=100)),
                ('sensor', models.IntegerField(blank=True, db_column='SENSOR', null=True)),
                ('eventcod', models.IntegerField(db_column='EVENTCOD')),
            ],
            options={
                'db_table': 'AESEVENTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Alarme',
            fields=[
                ('alarmid', models.AutoField(db_column='AlarmID', db_comment='ID тревоги', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(blank=True, db_column='UserID', db_comment='ID оператора (userа)', null=True)),
                ('state', models.IntegerField(db_column='State', db_comment='Состояние - неподтвержденная, ')),
                ('receivetime', models.DateTimeField(blank=True, db_column='ReceiveTime', db_comment='Время приема тревожного событи', null=True)),
                ('confirmtime', models.DateTimeField(blank=True, db_column='ConfirmTime', db_comment='Время подтверждения', null=True)),
                ('processtime', models.DateTimeField(blank=True, db_column='ProcessTime', db_comment='Время отработки', null=True)),
                ('recovertime', models.DateTimeField(blank=True, db_column='RecoverTime', db_comment='Время восстановления зоны', null=True)),
                ('lastreceivetime', models.DateTimeField(blank=True, db_column='LastReceiveTime', db_comment='Время приема последней тревоги', null=True)),
                ('receivecount', models.IntegerField(db_column='ReceiveCount', db_comment='Сколько раз срабатывала тревог')),
                ('sendtime_deg', models.DateTimeField(blank=True, db_column='SendTime_Deg', db_comment='Время отправки тревоги в ЕКЦ', null=True)),
                ('receivetime_deg', models.DateTimeField(blank=True, db_column='ReceiveTime_Deg', db_comment='Время приема дежурной частью( ', null=True)),
                ('confirmtime_deg', models.DateTimeField(blank=True, db_column='ConfirmTime_Deg', db_comment='Время отработки дежурной часть', null=True)),
                ('receivetime_omc', models.DateTimeField(blank=True, db_column='ReceiveTime_OMC', null=True)),
                ('confirmtime_omc', models.DateTimeField(blank=True, db_column='ConfirmTime_OMC', null=True)),
                ('rowid', models.TextField(blank=True, db_column='RowID', null=True)),
                ('realtime', models.DateTimeField(blank=True, db_column='RealTime', null=True)),
                ('done', models.IntegerField(blank=True, db_column='DONE', null=True)),
                ('processtime_deg', models.DateTimeField(blank=True, db_column='ProcessTime_Deg', null=True)),
                ('done_e', models.IntegerField(blank=True, db_column='DONE_E', null=True)),
                ('crew_arr', models.DateTimeField(blank=True, db_column='Crew_Arr', null=True)),
            ],
            options={
                'db_table': 'ALARME',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Alarmprim',
            fields=[
                ('alarmid', models.IntegerField(db_column='AlarmID', primary_key=True, serialize=False)),
                ('crew_arr', models.DateTimeField(blank=True, db_column='Crew_Arr', null=True)),
                ('prim', models.CharField(blank=True, db_column='Prim', max_length=250, null=True)),
            ],
            options={
                'db_table': 'ALARMPrim',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AllIm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modul', models.FloatField(blank=True, db_column='MODUL', null=True)),
            ],
            options={
                'db_table': 'ALL_IM',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Archalarme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alarmid', models.IntegerField(db_column='AlarmID')),
                ('zoneid', models.IntegerField(db_column='ZoneID')),
                ('userid', models.IntegerField(blank=True, db_column='UserID', null=True)),
                ('state', models.IntegerField(db_column='State')),
                ('receivetime', models.DateTimeField(blank=True, db_column='ReceiveTime', null=True)),
                ('confirmtime', models.DateTimeField(blank=True, db_column='ConfirmTime', null=True)),
                ('processtime', models.DateTimeField(blank=True, db_column='ProcessTime', null=True)),
                ('recovertime', models.DateTimeField(blank=True, db_column='RecoverTime', null=True)),
                ('lastreceivetime', models.DateTimeField(blank=True, db_column='LastReceiveTime', null=True)),
                ('receivecount', models.IntegerField(db_column='ReceiveCount')),
                ('reason', models.IntegerField(blank=True, db_column='Reason', null=True)),
                ('sendtime_deg', models.DateTimeField(blank=True, db_column='SendTime_Deg', null=True)),
                ('receivetime_deg', models.DateTimeField(blank=True, db_column='ReceiveTime_Deg', null=True)),
                ('confirmtime_deg', models.DateTimeField(blank=True, db_column='ConfirmTime_Deg', null=True)),
                ('receivetime_omc', models.DateTimeField(blank=True, db_column='ReceiveTime_OMC', null=True)),
                ('confirmtime_omc', models.DateTimeField(blank=True, db_column='ConfirmTime_OMC', null=True)),
                ('rowid', models.TextField(blank=True, db_column='RowID', null=True)),
                ('realtime', models.DateTimeField(blank=True, db_column='RealTime', null=True)),
                ('done', models.IntegerField(blank=True, db_column='DONE', null=True)),
                ('processtime_deg', models.DateTimeField(blank=True, db_column='ProcessTime_Deg', null=True)),
                ('done_e', models.IntegerField(blank=True, db_column='DONE_E', null=True)),
                ('crew_arr', models.DateTimeField(blank=True, db_column='Crew_Arr', null=True)),
            ],
            options={
                'db_table': 'ARCHALARME',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Archalarmprim',
            fields=[
                ('alarmid', models.IntegerField(db_column='AlarmID', primary_key=True, serialize=False)),
                ('crew_arr', models.DateTimeField(blank=True, db_column='Crew_Arr', null=True)),
                ('prim', models.CharField(blank=True, db_column='Prim', max_length=250, null=True)),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
            ],
            options={
                'db_table': 'ARCHALARMPrim',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArchGsm2History',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('modul', models.IntegerField(blank=True, db_column='MODUL', null=True)),
                ('sn', models.CharField(db_column='SN', max_length=20)),
                ('dt', models.DateTimeField(db_column='DT')),
                ('sq', models.IntegerField(db_column='SQ')),
                ('ip', models.CharField(blank=True, db_column='IP', max_length=20, null=True)),
                ('dis', models.DateTimeField(blank=True, db_column='DIS', null=True)),
            ],
            options={
                'db_table': 'ARCH_GSM2_HISTORY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Archgsmmsg',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('basenumber', models.IntegerField(db_column='BASENUMBER')),
                ('modul', models.IntegerField(db_column='MODUL')),
                ('groupn', models.IntegerField(blank=True, db_column='GROUPN', null=True)),
                ('zone', models.IntegerField(blank=True, db_column='ZONE', null=True)),
                ('event', models.CharField(db_column='EVENT', max_length=4)),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
                ('upd', models.DateTimeField(db_column='UPD')),
                ('cnt', models.IntegerField(db_column='CNT')),
            ],
            options={
                'db_table': 'ARCHGSMMSG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Archktmmsg',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('modul', models.IntegerField(db_column='MODUL')),
                ('rep', models.IntegerField(db_column='REP')),
                ('num', models.IntegerField(db_column='NUM')),
                ('numr', models.IntegerField(blank=True, db_column='NUMR', null=True)),
                ('msg', models.CharField(db_column='MSG', max_length=8)),
                ('dat', models.DateTimeField(blank=True, db_column='DAT', null=True)),
                ('upd', models.DateTimeField(blank=True, db_column='UPD', null=True)),
                ('ademco', models.CharField(db_column='ADEMCO', max_length=26)),
                ('cnt', models.IntegerField(blank=True, db_column='CNT', null=True)),
                ('basenumber', models.IntegerField(db_column='BaseNumber')),
            ],
            options={
                'db_table': 'ARCHKTMMSG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Archothere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventid', models.IntegerField(db_column='EventID')),
                ('time', models.DateTimeField(db_column='Time')),
                ('cardid', models.IntegerField(db_column='CARDID')),
                ('source', models.CharField(db_column='Source', max_length=60)),
                ('eventtype', models.IntegerField(db_column='EventType')),
                ('sensorid', models.IntegerField(db_column='SensorID')),
                ('realtime', models.DateTimeField(blank=True, db_column='RealTime', null=True)),
                ('done', models.IntegerField(blank=True, db_column='Done', null=True)),
            ],
            options={
                'db_table': 'ARCHOTHERE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Archstat',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('av', models.DecimalField(db_column='AV', decimal_places=2, max_digits=18)),
                ('mx', models.DecimalField(db_column='MX', decimal_places=2, max_digits=18)),
                ('mn', models.DecimalField(db_column='MN', decimal_places=2, max_digits=18)),
                ('modul', models.IntegerField(db_column='MODUL')),
                ('numrl', models.IntegerField(db_column='NUMRL')),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
            ],
            options={
                'db_table': 'ARCHSTAT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ArchtblEvents',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('receivetime', models.DateTimeField(db_column='ReceiveTime')),
                ('basen', models.IntegerField(db_column='BaseN')),
                ('unitn', models.IntegerField(db_column='UnitN')),
                ('eventkind', models.CharField(db_column='EventKind', max_length=10)),
                ('groupn', models.IntegerField(db_column='GroupN')),
                ('sensorn', models.IntegerField(db_column='SensorN')),
                ('workstationn', models.IntegerField(blank=True, db_column='WorkstationN', null=True)),
                ('rowver', models.TextField(blank=True, db_column='RowVer', null=True)),
                ('realtime', models.DateTimeField(blank=True, db_column='RealTime', null=True)),
            ],
            options={
                'db_table': 'ARCHtbl_Events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Archwatche',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eventid', models.IntegerField(db_column='EventID')),
                ('time', models.DateTimeField(db_column='Time')),
                ('type', models.IntegerField(db_column='Type')),
                ('responsibleid', models.IntegerField(db_column='ResponsibleID')),
                ('userid', models.IntegerField(blank=True, db_column='UserID', null=True)),
                ('sectionid', models.IntegerField(db_column='SectionID')),
                ('realtime', models.DateTimeField(blank=True, db_column='RealTime', null=True)),
            ],
            options={
                'db_table': 'ARCHWATCHE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Aud',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('tablename', models.CharField(db_column='TABLENAME', max_length=200)),
                ('operation', models.CharField(db_column='OPERATION', max_length=1)),
                ('dat', models.DateTimeField(blank=True, db_column='DAT', null=True)),
                ('recid', models.IntegerField(db_column='RECID')),
                ('recid2', models.IntegerField(blank=True, db_column='RECID2', null=True)),
            ],
            options={
                'db_table': 'AUD',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Bases',
            fields=[
                ('baseid', models.IntegerField(db_column='BaseID', db_comment='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', db_comment='Имя Системы', max_length=50, unique=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('dir', models.CharField(blank=True, db_column='DIR', max_length=50, null=True)),
            ],
            options={
                'db_table': 'BASES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BaseUnittype',
            fields=[
                ('base', models.IntegerField(db_column='BASE', primary_key=True, serialize=False)),
                ('unittype', models.IntegerField(db_column='UNITTYPE')),
            ],
            options={
                'db_table': 'BASE_UNITTYPE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cards',
            fields=[
                ('cardid', models.AutoField(db_column='CARDID', primary_key=True, serialize=False)),
                ('otisnumber', models.IntegerField(db_column='OTISNUMBER', db_comment='Номер договора')),
                ('objectname', models.CharField(db_column='OBJECTNAME', db_comment='Наименование объекта, владелец', max_length=250)),
                ('callsign', models.CharField(blank=True, db_column='CALLSIGN', db_comment='Позывной группы реагирования', max_length=10, null=True)),
                ('callnumber', models.IntegerField(blank=True, db_column='CALLNUMBER', db_comment='Номер группы реагирования', null=True)),
                ('info', models.CharField(db_column='INFO', db_comment='Адрес и инофрмация об объекте', max_length=255)),
                ('particularity', models.CharField(blank=True, db_column='PARTICULARITY', db_comment='Особенности объекта', max_length=500, null=True)),
                ('phones', models.CharField(blank=True, db_column='PHONES', db_comment='Номер телефона клиента', max_length=255, null=True)),
                ('scheme', models.BinaryField(blank=True, db_column='SCHEME', db_comment='Схема расположения объекта', null=True)),
                ('unitnumber', models.IntegerField(blank=True, db_column='UNITNUMBER', db_comment='Номер модуля', null=True)),
                ('zonesstate', models.IntegerField(blank=True, db_column='ZONESSTATE', null=True)),
                ('isprotected', models.CharField(blank=True, db_column='ISPROTECTED', max_length=1, null=True)),
                ('gsmphone', models.CharField(blank=True, db_column='GSMPHONE', max_length=10, null=True)),
                ('workstation', models.IntegerField(blank=True, db_column='WORKSTATION', null=True)),
                ('agreement', models.CharField(blank=True, db_column='AGREEMENT', max_length=20, null=True)),
                ('lost', models.IntegerField(blank=True, db_column='LOST', null=True)),
                ('test', models.IntegerField(blank=True, db_column='TEST', null=True)),
                ('flags', models.IntegerField(blank=True, db_column='FLAGS', null=True)),
                ('lat', models.DecimalField(blank=True, db_column='LAT', decimal_places=10, max_digits=13, null=True)),
                ('lon', models.DecimalField(blank=True, db_column='LON', decimal_places=10, max_digits=13, null=True)),
            ],
            options={
                'db_table': 'CARDS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CardsLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cardid', models.IntegerField(blank=True, db_column='CARDID', null=True)),
                ('basenumberu', models.IntegerField(blank=True, db_column='BASENUMBERU', null=True)),
                ('otisnumberu', models.IntegerField(blank=True, db_column='OTISNUMBERU', null=True)),
                ('unitnumberu', models.IntegerField(blank=True, db_column='UNITNUMBERU', null=True)),
                ('unittypeu', models.IntegerField(blank=True, db_column='UNITTYPEU', null=True)),
                ('isprotectedu', models.CharField(blank=True, db_column='ISPROTECTEDU', max_length=1, null=True)),
                ('workstationu', models.IntegerField(blank=True, db_column='WORKSTATIONU', null=True)),
                ('orgidu', models.IntegerField(blank=True, db_column='ORGIDU', null=True)),
                ('lostu', models.IntegerField(blank=True, db_column='LOSTU', null=True)),
                ('testu', models.IntegerField(blank=True, db_column='TESTU', null=True)),
                ('basenumberd', models.IntegerField(blank=True, db_column='BASENUMBERD', null=True)),
                ('otisnumberd', models.IntegerField(blank=True, db_column='OTISNUMBERD', null=True)),
                ('unitnumberd', models.IntegerField(blank=True, db_column='UNITNUMBERD', null=True)),
                ('unittyped', models.IntegerField(blank=True, db_column='UNITTYPED', null=True)),
                ('isprotectedd', models.CharField(blank=True, db_column='ISPROTECTEDD', max_length=1, null=True)),
                ('workstationd', models.IntegerField(blank=True, db_column='WORKSTATIOND', null=True)),
                ('orgidd', models.IntegerField(blank=True, db_column='ORGIDD', null=True)),
                ('lostd', models.IntegerField(blank=True, db_column='LOSTD', null=True)),
                ('testd', models.IntegerField(blank=True, db_column='TESTD', null=True)),
                ('userip', models.CharField(blank=True, db_column='USERIP', max_length=50, null=True)),
                ('username', models.CharField(blank=True, db_column='USERNAME', max_length=256, null=True)),
                ('userhost', models.CharField(blank=True, db_column='USERHOST', max_length=256, null=True)),
                ('appname', models.CharField(blank=True, db_column='APPNAME', max_length=256, null=True)),
                ('op', models.CharField(blank=True, db_column='OP', max_length=1, null=True)),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
                ('objectnameu', models.CharField(blank=True, db_column='OBJECTNAMEU', max_length=250, null=True)),
                ('objectnamed', models.CharField(blank=True, db_column='OBJECTNAMED', max_length=250, null=True)),
                ('infou', models.CharField(blank=True, db_column='INFOU', max_length=255, null=True)),
                ('infod', models.CharField(blank=True, db_column='INFOD', max_length=255, null=True)),
            ],
            options={
                'db_table': 'CARDS_LOG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ENames',
            fields=[
                ('key_id', models.AutoField(db_column='KEY_ID', primary_key=True, serialize=False)),
                ('e_number', models.CharField(blank=True, db_column='E_NUMBER', max_length=8, null=True, unique=True)),
                ('e_name', models.CharField(blank=True, db_column='E_NAME', max_length=11, null=True)),
                ('e_name_eng', models.CharField(blank=True, db_column='E_NAME_ENG', max_length=11, null=True)),
                ('e_name_lat', models.CharField(blank=True, db_column='E_NAME_LAT', max_length=11, null=True)),
                ('e_disc', models.CharField(blank=True, db_column='E_DISC', max_length=80, null=True)),
                ('e_denglish', models.CharField(blank=True, db_column='E_DENGLISH', max_length=80, null=True)),
                ('e_dlatvian', models.CharField(blank=True, db_column='E_DLATVIAN', max_length=80, null=True)),
                ('alarm', models.CharField(blank=True, db_column='ALARM', max_length=1, null=True)),
                ('techno', models.CharField(blank=True, db_column='TECHNO', max_length=1, null=True)),
                ('service', models.CharField(blank=True, db_column='SERVICE', max_length=1, null=True)),
                ('th1', models.CharField(blank=True, db_column='TH1', max_length=1, null=True)),
                ('pl', models.CharField(blank=True, db_column='PL', max_length=1, null=True)),
                ('arming', models.CharField(blank=True, db_column='ARMING', max_length=1, null=True)),
                ('disarming', models.CharField(blank=True, db_column='DISARMING', max_length=1, null=True)),
                ('pult', models.CharField(blank=True, db_column='PULT', max_length=1, null=True)),
                ('f_color', models.IntegerField(blank=True, db_column='F_Color', null=True)),
                ('paneltype', models.CharField(blank=True, db_column='PanelType', max_length=5, null=True)),
                ('zone_n', models.SmallIntegerField(blank=True, db_column='Zone_n', null=True)),
                ('rajon', models.SmallIntegerField(blank=True, db_column='Rajon', null=True)),
                ('type_ev', models.SmallIntegerField(blank=True, db_column='Type_Ev', null=True)),
            ],
            options={
                'db_table': 'E_NAMES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Errore',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('eventid', models.IntegerField(db_column='EventID')),
                ('receivetime', models.DateTimeField(db_column='ReceiveTime')),
                ('basen', models.IntegerField(db_column='BaseN')),
                ('unitn', models.IntegerField(db_column='UnitN')),
                ('eventkind', models.CharField(db_column='EventKind', max_length=10)),
                ('groupn', models.IntegerField(db_column='GroupN')),
                ('sensorn', models.IntegerField(db_column='SensorN')),
                ('workstationn', models.IntegerField(db_column='WorkstationN')),
                ('error', models.IntegerField(db_column='Error')),
                ('realtime', models.DateTimeField(blank=True, db_column='RealTime', null=True)),
                ('loginid', models.IntegerField(blank=True, db_column='LOGINID', null=True)),
                ('login', models.CharField(blank=True, db_column='LOGIN', max_length=50, null=True)),
                ('hostip', models.CharField(blank=True, db_column='HOSTIP', max_length=50, null=True)),
            ],
            options={
                'db_table': 'ERRORE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ErroreLog',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('eventid', models.IntegerField(db_column='EventID')),
                ('receivetime', models.DateTimeField(db_column='ReceiveTime')),
                ('basen', models.IntegerField(db_column='BaseN')),
                ('unitn', models.IntegerField(db_column='UnitN')),
                ('eventkind', models.CharField(db_column='EventKind', max_length=10)),
                ('groupn', models.IntegerField(db_column='GroupN')),
                ('sensorn', models.IntegerField(db_column='SensorN')),
                ('workstationn', models.IntegerField(db_column='WorkstationN')),
                ('error', models.IntegerField(db_column='Error')),
                ('username', models.CharField(blank=True, db_column='USERNAME', max_length=256, null=True)),
                ('appname', models.CharField(blank=True, db_column='APPNAME', max_length=256, null=True)),
                ('userhost', models.CharField(blank=True, db_column='USERHOST', max_length=256, null=True)),
                ('hostip', models.CharField(blank=True, db_column='HOSTIP', max_length=50, null=True)),
                ('delete_time', models.DateTimeField(db_column='DELETE_TIME')),
                ('loginid', models.IntegerField(db_column='LOGINID')),
                ('login', models.CharField(db_column='LOGIN', max_length=50)),
            ],
            options={
                'db_table': 'ERRORE_LOG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Errortype',
            fields=[
                ('err', models.IntegerField(db_column='ERR', primary_key=True, serialize=False)),
                ('e_disc', models.CharField(db_column='E_DISC', max_length=250)),
            ],
            options={
                'db_table': 'ERRORTYPE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Eventtypes',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='NAME', max_length=50)),
            ],
            options={
                'db_table': 'EVENTTYPES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gforce',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='NAME', max_length=50, unique=True)),
            ],
            options={
                'db_table': 'GFORCE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gsm2Cmd',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('pid', models.CharField(db_column='PID', max_length=50)),
                ('sms', models.BinaryField(db_column='SMS')),
                ('done', models.IntegerField(db_column='DONE', db_comment='флаг подтверждения 0 - новый п')),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
                ('n', models.IntegerField(blank=True, db_column='N', null=True)),
                ('srv', models.IntegerField(blank=True, db_column='SRV', null=True)),
            ],
            options={
                'db_table': 'GSM2_CMD',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gsm2CmdLog',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('modul', models.IntegerField(db_column='MODUL')),
                ('adt', models.IntegerField(blank=True, db_column='ADT', null=True)),
                ('sms', models.BinaryField(db_column='SMS')),
                ('done', models.IntegerField(db_column='DONE', db_comment='флаг подтверждения 0 - новый п')),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
                ('idt', models.DateTimeField(blank=True, db_column='IDT', null=True)),
                ('username', models.CharField(blank=True, db_column='USERNAME', max_length=256, null=True)),
                ('appname', models.CharField(blank=True, db_column='APPNAME', max_length=256, null=True)),
                ('userhost', models.CharField(blank=True, db_column='USERHOST', max_length=256, null=True)),
            ],
            options={
                'db_table': 'GSM2_CMD_LOG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gsm2CmdLogOp',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('sn_cmd', models.CharField(blank=True, db_column='SN_CMD', max_length=20, null=True)),
                ('modul', models.IntegerField(db_column='MODUL')),
                ('adt', models.IntegerField(blank=True, db_column='ADT', null=True)),
                ('sms', models.BinaryField(db_column='SMS')),
                ('done', models.IntegerField(db_column='DONE', db_comment='флаг подтверждения 0 - новый п')),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
                ('idt', models.DateTimeField(blank=True, db_column='IDT', null=True)),
                ('username', models.CharField(blank=True, db_column='USERNAME', max_length=256, null=True)),
                ('appname', models.CharField(blank=True, db_column='APPNAME', max_length=256, null=True)),
                ('userhost', models.CharField(blank=True, db_column='USERHOST', max_length=256, null=True)),
                ('sn_in', models.CharField(blank=True, db_column='SN_IN', max_length=20, null=True)),
                ('sms_in', models.BinaryField(blank=True, db_column='SMS_IN', null=True)),
                ('dt_in', models.DateTimeField(blank=True, db_column='DT_IN', null=True)),
            ],
            options={
                'db_table': 'GSM2_CMD_LOG_OP',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gsm2Egroup',
            fields=[
                ('egroup', models.IntegerField(db_column='EGROUP', primary_key=True, serialize=False)),
                ('g_disc', models.CharField(db_column='G_DISC', max_length=250)),
            ],
            options={
                'db_table': 'GSM2_EGROUP',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gsm2Events',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('egroup', models.IntegerField(db_column='EGROUP')),
                ('e1min', models.IntegerField(blank=True, db_column='E1MIN', null=True)),
                ('e1max', models.IntegerField(blank=True, db_column='E1MAX', null=True)),
                ('off1', models.IntegerField(db_column='OFF1')),
                ('e2min', models.IntegerField(blank=True, db_column='E2MIN', null=True)),
                ('e2max', models.IntegerField(blank=True, db_column='E2MAX', null=True)),
                ('off2', models.IntegerField(db_column='OFF2')),
                ('e_disc', models.CharField(db_column='E_DISC', max_length=250)),
                ('enabled', models.IntegerField(db_column='ENABLED')),
                ('acod', models.CharField(blank=True, db_column='ACOD', max_length=4, null=True)),
                ('zu', models.IntegerField(blank=True, db_column='ZU', db_comment='0 - техно,1-польз.,2-зона', null=True)),
                ('azon', models.IntegerField(blank=True, db_column='AZON', null=True)),
            ],
            options={
                'db_table': 'GSM2_EVENTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gsm2History',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('pid', models.CharField(blank=True, db_column='PID', max_length=50, null=True)),
                ('sn', models.CharField(db_column='SN', max_length=20)),
                ('dt', models.DateTimeField(db_column='DT')),
                ('sq', models.IntegerField(db_column='SQ')),
                ('ip', models.CharField(blank=True, db_column='IP', max_length=20, null=True)),
                ('dis', models.DateTimeField(blank=True, db_column='DIS', null=True)),
            ],
            options={
                'db_table': 'GSM2_HISTORY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gsm2In',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('sn', models.CharField(db_column='SN', max_length=20)),
                ('sms', models.BinaryField(db_column='SMS')),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
                ('cmd', models.BinaryField(blank=True, db_column='CMD', null=True)),
            ],
            options={
                'db_table': 'GSM2_IN',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gsm2Msg',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('sn', models.CharField(db_column='SN', max_length=20)),
                ('b1', models.IntegerField(blank=True, db_column='B1', null=True)),
                ('b2', models.IntegerField(blank=True, db_column='B2', null=True)),
                ('b3', models.IntegerField(blank=True, db_column='B3', null=True)),
                ('b4', models.IntegerField(blank=True, db_column='B4', null=True)),
                ('sq', models.IntegerField(blank=True, db_column='SQ', null=True)),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
                ('upd', models.DateTimeField(blank=True, db_column='UPD', null=True)),
                ('cnt', models.IntegerField(blank=True, db_column='CNT', null=True)),
                ('sms', models.IntegerField(blank=True, db_column='SMS', null=True)),
            ],
            options={
                'db_table': 'GSM2MSG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GsmConn',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('pid', models.CharField(db_column='PID', max_length=50)),
                ('sn', models.CharField(db_column='SN', max_length=20)),
                ('adt', models.IntegerField(blank=True, db_column='ADT', db_comment='тип панели', null=True)),
                ('notservice', models.IntegerField(blank=True, db_column='NOTSERVICE', db_comment='флаг обслуживания', null=True)),
                ('sq', models.IntegerField(blank=True, db_column='SQ', db_comment='Качество связи', null=True)),
                ('ip', models.CharField(blank=True, db_column='IP', max_length=20, null=True)),
                ('dt', models.DateTimeField(db_column='DT')),
                ('upd', models.DateTimeField(db_column='UPD')),
                ('cnt', models.IntegerField(db_column='CNT')),
                ('srv', models.IntegerField(blank=True, db_column='SRV', null=True)),
            ],
            options={
                'db_table': 'GSM_CONN',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gsmevents',
            fields=[
                ('id', models.AutoField(db_column='ID', db_comment='ID', primary_key=True, serialize=False)),
                ('e_num', models.IntegerField(db_column='E_NUM', db_comment='Номер(код) события', unique=True)),
                ('e_name', models.CharField(db_column='E_NAME', db_comment='Символьный код события (AES ко', max_length=4)),
                ('e_conv', models.CharField(blank=True, db_column='E_CONV', max_length=4, null=True)),
                ('e_disc', models.CharField(db_column='E_DISC', db_comment='Описание', max_length=255)),
            ],
            options={
                'db_table': 'GSMEVENTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gsmmsg',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('basenumber', models.IntegerField(db_column='BASENUMBER')),
                ('modul', models.IntegerField(db_column='MODUL')),
                ('groupn', models.IntegerField(blank=True, db_column='GROUPN', null=True)),
                ('zone', models.IntegerField(blank=True, db_column='ZONE', null=True)),
                ('event', models.CharField(db_column='EVENT', max_length=4)),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
                ('upd', models.DateTimeField(db_column='UPD')),
                ('cnt', models.IntegerField(db_column='CNT')),
            ],
            options={
                'db_table': 'GSMMSG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gsmoutobj',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('phone', models.CharField(db_column='PHONE', max_length=50)),
                ('event', models.IntegerField(db_column='EVENT')),
                ('groupn', models.IntegerField(db_column='GROUPN')),
                ('zone', models.IntegerField(db_column='ZONE')),
                ('basen', models.IntegerField(db_column='BASEN')),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
            ],
            options={
                'db_table': 'GSMOUTOBJ',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gsmsim',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('phone', models.CharField(db_column='PHONE', max_length=10)),
                ('sn', models.CharField(db_column='SN', max_length=20, unique=True)),
                ('pin1', models.CharField(blank=True, db_column='PIN1', max_length=4, null=True)),
                ('puk1', models.CharField(blank=True, db_column='PUK1', max_length=8, null=True)),
                ('pin2', models.CharField(blank=True, db_column='PIN2', max_length=4, null=True)),
                ('puk2', models.CharField(blank=True, db_column='PUK2', max_length=8, null=True)),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
                ('orgid', models.IntegerField(blank=True, db_column='ORGID', null=True)),
            ],
            options={
                'db_table': 'GSMSIM',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GsmUsn',
            fields=[
                ('sn', models.CharField(db_column='SN', max_length=20, primary_key=True, serialize=False)),
                ('modul', models.IntegerField(db_column='MODUL')),
            ],
            options={
                'db_table': 'GSM_USN',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GsmUsnLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modul', models.IntegerField(db_column='MODUL')),
                ('sn', models.CharField(db_column='SN', max_length=20)),
                ('op', models.CharField(db_column='OP', max_length=1)),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
                ('username', models.CharField(blank=True, db_column='USERNAME', max_length=256, null=True)),
                ('appname', models.CharField(blank=True, db_column='APPNAME', max_length=256, null=True)),
                ('userhost', models.CharField(blank=True, db_column='USERHOST', max_length=256, null=True)),
            ],
            options={
                'db_table': 'GSM_USN_LOG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hdays',
            fields=[
                ('sectionid', models.IntegerField(db_column='SectionID', primary_key=True, serialize=False)),
                ('hday', models.IntegerField(db_column='HDAY')),
                ('hmonth', models.IntegerField(db_column='HMONTH')),
            ],
            options={
                'db_table': 'HDAYS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HdaysLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sectionid', models.IntegerField(blank=True, db_column='SectionID', null=True)),
                ('hdayu', models.IntegerField(blank=True, db_column='HDAYU', null=True)),
                ('hmonthu', models.IntegerField(blank=True, db_column='HMONTHU', null=True)),
                ('hdayd', models.IntegerField(blank=True, db_column='HDAYD', null=True)),
                ('hmonthd', models.IntegerField(blank=True, db_column='HMONTHD', null=True)),
                ('userip', models.CharField(blank=True, db_column='USERIP', max_length=50, null=True)),
                ('username', models.CharField(blank=True, db_column='USERNAME', max_length=256, null=True)),
                ('userhost', models.CharField(blank=True, db_column='USERHOST', max_length=256, null=True)),
                ('appname', models.CharField(blank=True, db_column='APPNAME', max_length=256, null=True)),
                ('op', models.CharField(blank=True, db_column='OP', max_length=1, null=True)),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
            ],
            options={
                'db_table': 'HDAYS_LOG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ktmademco',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('a_cod', models.CharField(db_column='A_COD', max_length=4)),
                ('a_disc_ru', models.CharField(db_column='A_DISC_RU', max_length=80)),
                ('a_disc_en', models.CharField(db_column='A_DISC_EN', max_length=80)),
                ('iszone', models.CharField(db_column='ISZONE', max_length=1)),
                ('arming', models.CharField(db_column='ARMING', max_length=1)),
                ('disarming', models.CharField(db_column='DISARMING', max_length=1)),
                ('batteryoff', models.CharField(db_column='BATTERYOFF', max_length=1)),
                ('batteryon', models.CharField(db_column='BATTERYON', max_length=1)),
                ('poweroff', models.CharField(db_column='POWEROFF', max_length=1)),
                ('poweron', models.CharField(db_column='POWERON', max_length=1)),
                ('firezon', models.CharField(db_column='FIREZON', max_length=1)),
                ('zonerestore', models.CharField(db_column='ZONERESTORE', max_length=1)),
                ('zonebreak', models.CharField(db_column='ZONEBREAK', max_length=1)),
                ('zoneincl', models.CharField(db_column='ZONEINCL', max_length=1)),
                ('zoneexcl', models.CharField(db_column='ZONEEXCL', max_length=1)),
                ('duress', models.CharField(db_column='DURESS', max_length=1)),
                ('abutton', models.CharField(db_column='ABUTTON', max_length=1)),
                ('acod', models.CharField(blank=True, db_column='ACOD', max_length=20, null=True)),
                ('enabled', models.CharField(db_column='ENABLED', max_length=1)),
                ('alarm', models.CharField(db_column='ALARM', max_length=1)),
            ],
            options={
                'db_table': 'KTMADEMCO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ktmevents',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('e_number', models.CharField(db_column='E_NUMBER', max_length=8, unique=True)),
                ('e_disc', models.CharField(blank=True, db_column='E_DISC', max_length=80, null=True)),
                ('e_denglish', models.CharField(blank=True, db_column='E_DENGLISH', max_length=80, null=True)),
                ('sectionnum', models.IntegerField(blank=True, db_column='SECTIONNUM', null=True)),
                ('zonenum', models.IntegerField(blank=True, db_column='ZONENUM', null=True)),
                ('iszone', models.CharField(blank=True, db_column='ISZONE', max_length=1, null=True)),
                ('ispanel', models.CharField(blank=True, db_column='ISPANEL', max_length=1, null=True)),
                ('alarm', models.CharField(db_column='ALARM', max_length=1)),
                ('arming', models.CharField(db_column='ARMING', max_length=1)),
                ('disarming', models.CharField(db_column='DISARMING', max_length=1)),
                ('batteryoff', models.CharField(db_column='BATTERYOFF', max_length=1)),
                ('poweroff', models.CharField(db_column='POWEROFF', max_length=1)),
                ('batteryon', models.CharField(db_column='BATTERYON', max_length=1)),
                ('poweron', models.CharField(db_column='POWERON', max_length=1)),
                ('firezon', models.CharField(db_column='FIREZON', max_length=1)),
                ('zonerestore', models.CharField(db_column='ZONERESTORE', db_comment='Восстановление зоны', max_length=1)),
                ('zonebreak', models.CharField(db_column='ZONEBREAK', db_comment='Нарушение зоны', max_length=1)),
                ('zoneexcl', models.CharField(db_column='ZONEEXCL', db_comment='Зона исключена', max_length=1)),
                ('zoneincl', models.CharField(db_column='ZONEINCL', db_comment='Зона включена', max_length=1)),
                ('duress', models.CharField(db_column='DURESS', db_comment='Принуждение', max_length=1)),
                ('abutton', models.CharField(db_column='ABUTTON', db_comment='Тревожная кнопка нажата', max_length=1)),
                ('enabled', models.CharField(db_column='ENABLED', max_length=1)),
                ('acod', models.CharField(blank=True, db_column='ACOD', max_length=20, null=True)),
            ],
            options={
                'db_table': 'KTMEVENTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ktmmsg',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('modul', models.IntegerField(db_column='MODUL')),
                ('rep', models.IntegerField(db_column='REP')),
                ('num', models.IntegerField(db_column='NUM')),
                ('numr', models.IntegerField(blank=True, db_column='NUMR', null=True)),
                ('msg', models.CharField(db_column='MSG', max_length=8)),
                ('dat', models.DateTimeField(blank=True, db_column='DAT', null=True)),
                ('upd', models.DateTimeField(blank=True, db_column='UPD', null=True)),
                ('ademco', models.CharField(db_column='ADEMCO', max_length=26)),
                ('cnt', models.IntegerField(blank=True, db_column='CNT', null=True)),
                ('basenumber', models.IntegerField(db_column='BaseNumber')),
            ],
            options={
                'db_table': 'KTMMSG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ktmmsgu',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('dat', models.DateTimeField(blank=True, db_column='DAT', db_comment='дата пакета', null=True)),
                ('basenumber', models.IntegerField(db_column='BASENUMBER', db_comment='База')),
                ('rep', models.IntegerField(db_column='REP', db_comment='Ретранслятор')),
                ('modul', models.IntegerField(db_column='MODUL', db_comment='Модуль')),
                ('num', models.IntegerField(db_column='NUM', db_comment='Номер пакета')),
                ('msg', models.CharField(db_column='MSG', db_comment='Выделенное сообщение', max_length=8)),
                ('ademco', models.CharField(db_column='ADEMCO', db_comment='Весь пакет', max_length=26)),
                ('sig', models.IntegerField(db_column='SIG', db_comment='Уровень сигнала')),
                ('upd', models.DateTimeField(blank=True, db_column='UPD', null=True)),
                ('cnt', models.IntegerField(blank=True, db_column='CNT', null=True)),
            ],
            options={
                'db_table': 'KTMMSGU',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ktmstat',
            fields=[
                ('id', models.AutoField(db_column='ID', db_comment='ID', primary_key=True, serialize=False)),
                ('num', models.IntegerField(db_column='NUM', db_comment='Номер сообщения')),
                ('modul', models.IntegerField(db_column='MODUL', db_comment='Номер модуля')),
                ('rep', models.IntegerField(db_column='REP', db_comment='Ретранслятор')),
                ('numrl', models.IntegerField(blank=True, db_column='NUMRL', db_comment='Локальный приемник', null=True)),
                ('msg', models.CharField(blank=True, db_column='MSG', db_comment='Сообщение', max_length=8, null=True)),
                ('signal', models.IntegerField(db_column='SIGNAL', db_comment='Уровень сигнала')),
                ('dat', models.DateTimeField(blank=True, db_column='DAT', db_comment='Дата посылки', null=True)),
                ('pac', models.CharField(db_column='PAC', max_length=26)),
                ('basenumber', models.IntegerField(db_column='BaseNumber', db_comment='Номер базы')),
            ],
            options={
                'db_table': 'KTMSTAT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ktmstatsig',
            fields=[
                ('id', models.AutoField(db_column='ID', db_comment='ID', primary_key=True, serialize=False)),
                ('modul', models.IntegerField(db_column='MODUL', db_comment='Модуль')),
                ('numrl', models.IntegerField(db_column='NUMRL', db_comment='Номер локального приемника')),
                ('rep', models.IntegerField(db_column='REP', db_comment='Ретранслятор')),
                ('signal', models.IntegerField(db_column='SIGNAL', db_comment='Уровень')),
                ('basenumber', models.IntegerField(db_column='BaseNumber', db_comment='База')),
                ('cnt', models.IntegerField(blank=True, db_column='CNT', null=True)),
                ('dat', models.DateTimeField(blank=True, db_column='DAT', db_comment='Дата и время вставки', null=True)),
                ('upd', models.DateTimeField(blank=True, db_column='UPD', db_comment='Дата и время последнего приход', null=True)),
            ],
            options={
                'db_table': 'KTMSTATSIG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ktmundefmsg',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
                ('basen', models.IntegerField(db_column='BASEN')),
                ('unitn', models.IntegerField(db_column='UNITN')),
                ('msg', models.CharField(db_column='MSG', max_length=8)),
            ],
            options={
                'db_table': 'KTMUNDEFMSG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ktsrent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('орг_я', models.CharField(blank=True, db_column='Орг-я', max_length=255, null=True)),
                ('imei', models.CharField(blank=True, db_column='IMEI', max_length=255, null=True)),
            ],
            options={
                'db_table': 'KTSRENT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Leftusn',
            fields=[
                ('sn', models.CharField(db_column='SN', max_length=20, primary_key=True, serialize=False)),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
            ],
            options={
                'db_table': 'LEFTUSN',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Loge',
            fields=[
                ('eventid', models.AutoField(db_column='EventID', db_comment='ID события регистрации (Login/', primary_key=True, serialize=False)),
                ('userid', models.IntegerField(db_column='UserID', db_comment='ID оператора (userа)')),
                ('type', models.IntegerField(db_column='Type', db_comment='Тип регистрации (Login/Logout)')),
                ('time', models.DateTimeField(db_column='Time', db_comment='Время регистрации')),
                ('workstationn', models.IntegerField(db_column='WorkStationN')),
                ('appname', models.CharField(blank=True, db_column='APPNAME', max_length=256, null=True)),
                ('userhost', models.CharField(blank=True, db_column='USERHOST', max_length=256, null=True)),
                ('username', models.CharField(blank=True, db_column='USERNAME', max_length=256, null=True)),
                ('userip', models.CharField(blank=True, db_column='USERIP', max_length=50, null=True)),
            ],
            options={
                'db_table': 'LOGE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('messageid', models.AutoField(db_column='MessageID', primary_key=True, serialize=False)),
                ('time', models.DateTimeField(db_column='Time')),
                ('type', models.IntegerField(db_column='Type')),
                ('kind', models.IntegerField(db_column='Kind')),
                ('message', models.CharField(db_column='Message', max_length=50)),
                ('basenumber', models.IntegerField(db_column='BaseNumber')),
            ],
            options={
                'db_table': 'MESSAGES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Moduls',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('base', models.IntegerField(db_column='BASE')),
                ('unittype', models.IntegerField(db_column='UNITTYPE')),
                ('adt', models.IntegerField(blank=True, db_column='ADT', null=True)),
                ('notserv', models.IntegerField(blank=True, db_column='NOTSERV', null=True)),
                ('clpacketid', models.IntegerField(blank=True, db_column='CLPACKETID', null=True)),
                ('np', models.IntegerField(blank=True, db_column='NP', null=True)),
                ('eth', models.IntegerField(blank=True, db_column='ETH', null=True)),
            ],
            options={
                'db_table': 'MODULS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModulsIm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modul', models.FloatField(blank=True, db_column='MODUL', null=True)),
            ],
            options={
                'db_table': 'MODULS_IM$',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Org',
            fields=[
                ('orgid', models.IntegerField(db_column='OrgID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=50)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('dir', models.CharField(blank=True, db_column='DIR', max_length=50, null=True)),
            ],
            options={
                'db_table': 'ORG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Othere',
            fields=[
                ('eventid', models.AutoField(db_column='EventID', db_comment='ID события', primary_key=True, serialize=False)),
                ('time', models.DateTimeField(db_column='Time', db_comment='Дата/время события')),
                ('cardid', models.IntegerField(db_column='CARDID', db_comment='Номер модуля')),
                ('source', models.CharField(db_column='Source', db_comment='Собственно адемко сообщение ??', max_length=60)),
                ('eventtype', models.IntegerField(db_column='EventType', db_comment='Тип служебных событий')),
                ('sensorid', models.IntegerField(db_column='SensorID', db_comment='Номер датчика  - не ID зоны')),
                ('realtime', models.DateTimeField(blank=True, db_column='RealTime', null=True)),
                ('done', models.IntegerField(blank=True, db_column='Done', null=True)),
            ],
            options={
                'db_table': 'OTHERE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PacketRules',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nump', models.IntegerField(db_column='NUMP')),
                ('numadt', models.IntegerField(db_column='NUMADT')),
            ],
            options={
                'db_table': 'PACKET_RULES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reasons',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='NAME', max_length=50)),
                ('flag', models.IntegerField(blank=True, db_column='FLAG', null=True)),
            ],
            options={
                'db_table': 'REASONS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RepEkc',
            fields=[
                ('alarmid', models.IntegerField(db_column='AlarmID', primary_key=True, serialize=False)),
                ('o_ekc', models.CharField(db_column='O_EKC', max_length=50)),
                ('reasondesc', models.CharField(blank=True, db_column='ReasonDesc', max_length=50, null=True)),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
                ('op', models.IntegerField(db_column='OP')),
            ],
            options={
                'db_table': 'REP_EKC',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rpersons',
            fields=[
                ('responsibleid', models.AutoField(db_column='ResponsibleID', db_comment='ID отвественного', primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, db_column='FirstName', db_comment='Имя', max_length=60, null=True)),
                ('middlename', models.CharField(blank=True, db_column='MiddleName', db_comment='Отчество', max_length=70, null=True)),
                ('lastname', models.CharField(blank=True, db_column='LastName', db_comment='Фамилия', max_length=80, null=True)),
                ('phone', models.BigIntegerField(blank=True, db_column='Phone', db_comment='Телефон', null=True)),
                ('address', models.CharField(blank=True, db_column='Address', db_comment='Адрес', max_length=110, null=True)),
                ('enamobapp', models.IntegerField(blank=True, db_column='EnaMobApp', null=True)),
            ],
            options={
                'db_table': 'RPERSONS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sections',
            fields=[
                ('sectionid', models.AutoField(db_column='SectionID', db_comment='ID раздела', primary_key=True, serialize=False)),
                ('cardid', models.IntegerField(db_column='CardID', db_comment='ID карточки')),
                ('sordernumber', models.IntegerField(db_column='SOrderNumber', db_comment='Логический номер раздела')),
                ('info', models.CharField(blank=True, db_column='Info', db_comment='Примечание', max_length=255, null=True)),
                ('responsibleid', models.IntegerField(blank=True, db_column='ResponsibleID', db_comment='ID отвественного лица (по посл', null=True)),
                ('starttime', models.DateTimeField(blank=True, db_column='StartTime', db_comment='Старт задержки???(задержка тре', null=True)),
                ('endtime', models.DateTimeField(blank=True, db_column='EndTime', db_comment='Конец задержки??? (задержка тр', null=True)),
                ('staytime', models.DateTimeField(blank=True, db_column='StayTime', db_comment='Время до которого обеъкт долже', null=True)),
                ('npassword', models.IntegerField(blank=True, db_column='NPassword', db_comment='Цифровой пароль', null=True)),
                ('spassword', models.CharField(blank=True, db_column='SPassword', db_comment='Символьный пароль (кодовое сло', max_length=50, null=True)),
                ('state', models.IntegerField(blank=True, db_column='State', db_comment='Состояние раздела', null=True)),
                ('statedate', models.DateTimeField(blank=True, db_column='StateDate', db_comment='Время установки - изменения со', null=True)),
                ('sinfo', models.CharField(blank=True, db_column='SInfo', db_comment='Служебная информация', max_length=255, null=True)),
                ('startstaytime', models.DateTimeField(blank=True, db_column='StartStayTime', db_comment='Время постановки на охрану(ког', null=True)),
                ('endstaytime', models.DateTimeField(blank=True, db_column='EndStayTime', db_comment='Время постановки на охрану( ко', null=True)),
                ('flags', models.IntegerField(db_column='Flags', db_comment='нулевой бит - охраняется разде')),
                ('monthstaytime', models.IntegerField(blank=True, db_column='MonthStayTime', null=True)),
                ('technicid', models.IntegerField(blank=True, db_column='TechnicID', null=True)),
                ('cset', models.DecimalField(db_column='CSet', decimal_places=2, max_digits=18)),
                ('cratio', models.DecimalField(db_column='CRatio', decimal_places=2, max_digits=18)),
                ('sectionname', models.CharField(blank=True, db_column='SectionName', db_comment='Название раздела', max_length=100, null=True)),
                ('invalidawaytimes', models.CharField(blank=True, db_column='InvalidAwayTimes', max_length=350, null=True)),
                ('holidays', models.CharField(blank=True, db_column='Holidays', max_length=192, null=True)),
                ('crmid', models.IntegerField(blank=True, db_column='CRMID', null=True)),
                ('crmid_2', models.IntegerField(blank=True, db_column='CRMID_2', null=True)),
            ],
            options={
                'db_table': 'SECTIONS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SectionsLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sectionid', models.IntegerField(db_column='SectionID')),
                ('cardidu', models.IntegerField(blank=True, db_column='CardIDU', null=True)),
                ('sordernumberu', models.IntegerField(blank=True, db_column='SOrderNumberU', null=True)),
                ('flagsu', models.IntegerField(blank=True, db_column='FlagsU', null=True)),
                ('cardidd', models.IntegerField(blank=True, db_column='CardIDD', null=True)),
                ('sordernumberd', models.IntegerField(blank=True, db_column='SOrderNumberD', null=True)),
                ('flagsd', models.IntegerField(blank=True, db_column='FlagsD', null=True)),
                ('userip', models.CharField(blank=True, db_column='USERIP', max_length=50, null=True)),
                ('username', models.CharField(blank=True, db_column='USERNAME', max_length=256, null=True)),
                ('userhost', models.CharField(blank=True, db_column='USERHOST', max_length=256, null=True)),
                ('appname', models.CharField(blank=True, db_column='APPNAME', max_length=256, null=True)),
                ('op', models.CharField(blank=True, db_column='OP', max_length=1, null=True)),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
                ('infou', models.CharField(blank=True, db_column='InfoU', max_length=255, null=True)),
                ('infod', models.CharField(blank=True, db_column='InfoD', max_length=255, null=True)),
                ('sinfou', models.CharField(blank=True, db_column='SInfoU', max_length=255, null=True)),
                ('sinfod', models.CharField(blank=True, db_column='SInfoD', max_length=255, null=True)),
            ],
            options={
                'db_table': 'SECTIONS_LOG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Smsevents',
            fields=[
                ('smsevent', models.IntegerField(db_column='SMSEvent', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=50)),
            ],
            options={
                'db_table': 'SMSEvents',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Smspers',
            fields=[
                ('smspersonid', models.AutoField(db_column='SMSPersonID', db_comment='ID пользователя SMS оповещения', primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, db_column='FirstName', db_comment='Имя', max_length=60, null=True)),
                ('middlename', models.CharField(blank=True, db_column='MiddleName', db_comment='Отчество', max_length=70, null=True)),
                ('lastname', models.CharField(blank=True, db_column='LastName', db_comment='Фамилия', max_length=80, null=True)),
                ('phone', models.CharField(db_column='Phone', db_comment='номер сотового телефона', max_length=50)),
                ('address', models.CharField(blank=True, db_column='Address', db_comment='адрес', max_length=200, null=True)),
            ],
            options={
                'db_table': 'SMSPERS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SprEvents',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('acod', models.CharField(db_column='ACOD', max_length=4, unique=True)),
                ('cod', models.IntegerField(db_column='COD', unique=True)),
                ('def_field', models.CharField(db_column='DEF', max_length=250)),
                ('r_acod', models.CharField(blank=True, db_column='R_ACOD', max_length=4, null=True)),
                ('r_cod', models.IntegerField(blank=True, db_column='R_COD', null=True)),
                ('r_def', models.CharField(blank=True, db_column='R_DEF', max_length=250, null=True)),
                ('is_sensor', models.IntegerField(blank=True, db_column='IS_SENSOR', null=True)),
            ],
            options={
                'db_table': 'SPR_EVENTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SprVzones',
            fields=[
                ('zonenumber', models.IntegerField(db_column='ZoneNumber', primary_key=True, serialize=False)),
                ('info', models.CharField(db_column='Info', max_length=50)),
                ('autocreate', models.IntegerField(blank=True, db_column='AutoCreate', null=True)),
                ('event', models.CharField(blank=True, db_column='Event', max_length=4, null=True)),
                ('section', models.IntegerField(blank=True, db_column='Section', null=True)),
            ],
            options={
                'db_table': 'SPR_VZONES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Srperson',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('sectionid', models.IntegerField(db_column='SectionID', db_comment='Раздел')),
                ('responsibleid', models.IntegerField(db_column='ResponsibleID', db_comment='Отвественный')),
                ('rordernumber', models.IntegerField(db_column='ROrderNumber', db_comment='Номер по порядку пользователя ')),
                ('m_event', models.IntegerField(blank=True, db_column='M_EVENT', null=True)),
            ],
            options={
                'db_table': 'SRPERSON',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ssmspers',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('sectionid', models.IntegerField(db_column='SectionID', db_comment='ID Раздела')),
                ('smspersonid', models.IntegerField(db_column='SMSPersonID', db_comment='ID пользователя услуги SMS опо')),
                ('smsevents', models.IntegerField(db_column='SMSEvents', db_comment='событие для SMS оповещения (ви')),
            ],
            options={
                'db_table': 'SSMSPERS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblAinterceptor',
            fields=[
                ('wp', models.IntegerField(db_column='WP', primary_key=True, serialize=False)),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
                ('a', models.IntegerField(blank=True, db_column='A', null=True)),
            ],
            options={
                'db_table': 'tbl_AInterceptor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblAlarmBtn',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('prefix', models.CharField(blank=True, db_column='PREFIX', max_length=10, null=True)),
                ('phone', models.CharField(db_column='PHONE', max_length=10)),
                ('rid', models.IntegerField(db_column='RID')),
                ('zoneid', models.IntegerField(db_column='ZONEID')),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
            ],
            options={
                'db_table': 'tbl_ALARM_BTN',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblAlarmeE',
            fields=[
                ('alarmid', models.IntegerField(db_column='AlarmID', db_comment='ID тревоги', primary_key=True, serialize=False)),
                ('zoneid', models.IntegerField(db_column='ZoneID', db_comment='ID зоны')),
                ('state', models.IntegerField(db_column='State', db_comment='Состояние тревоги')),
                ('sendtime_deg', models.DateTimeField(blank=True, db_column='SendTime_Deg', db_comment='Время отправки тревоги в ЕКЦ', null=True)),
                ('receivetime_deg', models.DateTimeField(blank=True, db_column='ReceiveTime_Deg', db_comment='Время принятия дежуркой-сервер', null=True)),
                ('confirmtime_deg', models.DateTimeField(blank=True, db_column='ConfirmTime_Deg', db_comment='Время подтверждения диспетчерм', null=True)),
                ('reason', models.IntegerField(blank=True, db_column='Reason', db_comment='Причина отработки тревоги лрно', null=True)),
                ('done', models.IntegerField(blank=True, db_column='DONE', db_comment='Флаг отработки оператором', null=True)),
                ('done_e', models.IntegerField(blank=True, db_column='DONE_E', db_comment='Флаг отработки диспетчером ЕКЦ', null=True)),
                ('receivecount', models.IntegerField(blank=True, db_column='ReceiveCount', null=True)),
                ('crew_arr', models.DateTimeField(blank=True, db_column='Crew_Arr', db_comment='Время прибытия экипажа', null=True)),
            ],
            options={
                'db_table': 'tbl_ALARME_E',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblClientCards',
            fields=[
                ('iduser', models.IntegerField(db_column='IDUser')),
                ('cardid', models.IntegerField(db_column='CARDID')),
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'tbl_CLIENT_CARDS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblDevver',
            fields=[
                ('adt', models.IntegerField(db_column='ADT', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='NAME', max_length=50)),
                ('r', models.IntegerField(blank=True, db_column='R', null=True)),
                ('im', models.IntegerField(blank=True, db_column='IM', null=True)),
            ],
            options={
                'db_table': 'tbl_DevVer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblDrycontact',
            fields=[
                ('zoneid', models.IntegerField(db_column='ZoneID', primary_key=True, serialize=False)),
                ('orgeventkind', models.CharField(db_column='orgEventKind', max_length=10)),
                ('neweventkind', models.CharField(db_column='newEventKind', max_length=50)),
                ('newgroupn', models.IntegerField(db_column='NewGroupN')),
                ('newsensorn', models.IntegerField(db_column='NewSensorN')),
            ],
            options={
                'db_table': 'tbl_dryContact',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblEkcCall',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('oname', models.CharField(db_column='OName', max_length=50)),
            ],
            options={
                'db_table': 'tbl_EKC_Call',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblEvents',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('receivetime', models.DateTimeField(db_column='ReceiveTime')),
                ('basen', models.IntegerField(db_column='BaseN')),
                ('unitn', models.IntegerField(db_column='UnitN')),
                ('eventkind', models.CharField(db_column='EventKind', max_length=10)),
                ('groupn', models.IntegerField(db_column='GroupN')),
                ('sensorn', models.IntegerField(db_column='SensorN')),
                ('workstationn', models.IntegerField(blank=True, db_column='WorkstationN', null=True)),
                ('rowver', models.TextField(blank=True, db_column='RowVer', null=True)),
                ('realtime', models.DateTimeField(blank=True, db_column='RealTime', null=True)),
                ('flag', models.IntegerField(blank=True, db_column='Flag', null=True)),
            ],
            options={
                'db_table': 'tbl_Events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblExMech',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('card', models.IntegerField(db_column='CARD')),
                ('dry_contact', models.IntegerField(db_column='DRY_CONTACT')),
                ('type', models.IntegerField(db_column='TYPE')),
                ('num', models.IntegerField(db_column='NUM')),
                ('def_field', models.CharField(blank=True, db_column='DEF', max_length=100, null=True)),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
            ],
            options={
                'db_table': 'tbl_EX_MECH',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblGsm2Config',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modul', models.IntegerField(db_column='MODUL')),
                ('adt', models.IntegerField(blank=True, db_column='ADT', null=True)),
                ('sms', models.BinaryField(db_column='SMS')),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
                ('username', models.CharField(blank=True, db_column='USERNAME', max_length=256, null=True)),
                ('appname', models.CharField(blank=True, db_column='APPNAME', max_length=256, null=True)),
                ('userhost', models.CharField(blank=True, db_column='USERHOST', max_length=256, null=True)),
            ],
            options={
                'db_table': 'tbl_GSM2_CONFIG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblGsm2R',
            fields=[
                ('username', models.CharField(db_column='USERNAME', max_length=20, primary_key=True, serialize=False)),
                ('orgid', models.CharField(db_column='ORGID', max_length=100)),
                ('simorgid', models.IntegerField(db_column='SIMORGID')),
            ],
            options={
                'db_table': 'tbl_GSM2_R',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblGsm2R1',
            fields=[
                ('username', models.CharField(db_column='USERNAME', max_length=20, primary_key=True, serialize=False)),
                ('orgid', models.IntegerField(db_column='ORGID')),
                ('simorgid', models.IntegerField(db_column='SIMORGID')),
            ],
            options={
                'db_table': 'tbl_GSM2_R1',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblGsm2SmsStat',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
                ('sn', models.CharField(db_column='SN', max_length=20)),
                ('sms', models.CharField(db_column='SMS', max_length=200)),
            ],
            options={
                'db_table': 'tbl_GSM2SMS_STAT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblGsm2Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modul', models.IntegerField(db_column='MODUL')),
                ('adt', models.IntegerField(blank=True, db_column='ADT', null=True)),
                ('sms', models.BinaryField(db_column='SMS')),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
                ('username', models.CharField(blank=True, db_column='USERNAME', max_length=256, null=True)),
                ('appname', models.CharField(blank=True, db_column='APPNAME', max_length=256, null=True)),
                ('userhost', models.CharField(blank=True, db_column='USERHOST', max_length=256, null=True)),
            ],
            options={
                'db_table': 'tbl_GSM2_USERS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblGuardR',
            fields=[
                ('verifyid', models.CharField(db_column='VERIFYID', max_length=20, primary_key=True, serialize=False)),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
            ],
            options={
                'db_table': 'tbl_GUARD_R',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblImei',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('modul', models.IntegerField(blank=True, db_column='MODUL', null=True)),
                ('sn', models.CharField(blank=True, db_column='SN', max_length=30, null=True)),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
                ('im', models.CharField(blank=True, db_column='IM', max_length=20, null=True)),
            ],
            options={
                'db_table': 'tbl_IMEI',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblLost',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('cardid', models.IntegerField(db_column='CARDID')),
                ('lastdt', models.DateTimeField(db_column='LASTDT', db_comment='дата последнего')),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
            ],
            options={
                'db_table': 'tbl_LOST',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblLostModuls',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('modul', models.IntegerField(db_column='MODUL')),
                ('base', models.IntegerField(db_column='BASE')),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
            ],
            options={
                'db_table': 'tbl_LOST_MODULS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblMisc',
            fields=[
                ('eventid', models.IntegerField(db_column='EventID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'tbl_MISC',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblNeedModuls',
            fields=[
                ('modul', models.IntegerField(db_column='MODUL', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'tbl_NEED_MODULS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblProviders',
            fields=[
                ('pref', models.IntegerField(db_column='PREF', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='NAME', max_length=50)),
                ('color', models.IntegerField(blank=True, db_column='COLOR', null=True)),
            ],
            options={
                'db_table': 'tbl_PROVIDERS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblRefId',
            fields=[
                ('tbl_name', models.CharField(db_column='tbl_NAME', max_length=50, primary_key=True, serialize=False)),
                ('old_id', models.IntegerField(db_column='OLD_ID')),
                ('new_id', models.IntegerField(blank=True, db_column='NEW_ID', null=True)),
            ],
            options={
                'db_table': 'tbl_REF_ID',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblSmsnotices',
            fields=[
                ('noticeid', models.AutoField(db_column='NoticeID', primary_key=True, serialize=False)),
                ('datetimewhenreceive', models.DateTimeField(db_column='DateTimeWhenReceive')),
                ('sectionid', models.IntegerField(db_column='SectionID')),
                ('crmid', models.IntegerField(blank=True, db_column='CRMID', null=True)),
                ('crmid_2', models.IntegerField(blank=True, db_column='CRMID_2', null=True)),
                ('smspersonid', models.IntegerField(db_column='SMSPersonID')),
                ('otisnumber', models.IntegerField(db_column='OtisNumber')),
                ('npassword', models.IntegerField(db_column='NPassword')),
                ('phone', models.CharField(db_column='Phone', max_length=13)),
                ('fio', models.CharField(db_column='FIO', max_length=150)),
                ('smskind', models.IntegerField(db_column='SMSKind')),
                ('datetimewhensent', models.DateTimeField(db_column='DateTimeWhenSent')),
                ('status', models.CharField(db_column='Status', max_length=1)),
                ('sms_text', models.CharField(db_column='SMS_Text', max_length=160)),
                ('sendattemptcount', models.IntegerField(blank=True, db_column='SendAttemptCount', null=True)),
                ('basenumber', models.IntegerField(blank=True, db_column='BASENUMBER', null=True)),
            ],
            options={
                'db_table': 'tbl_SMSNotices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblSnPhoneIm',
            fields=[
                ('sn', models.CharField(db_column='SN', max_length=20, primary_key=True, serialize=False)),
                ('phone', models.CharField(db_column='PHONE', max_length=10)),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
            ],
            options={
                'db_table': 'tbl_SN_PHONE_IM',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblSprip',
            fields=[
                ('ip', models.CharField(db_column='IP', max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=50)),
            ],
            options={
                'db_table': 'tbl_SPRIP',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TblTestZones',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
                ('unitnumber', models.IntegerField(db_column='UNITNUMBER')),
                ('otisnumber', models.IntegerField(db_column='OTISNUMBER')),
                ('name', models.CharField(db_column='NAME', max_length=100)),
                ('adt', models.IntegerField(db_column='ADT')),
            ],
            options={
                'db_table': 'tbl_TEST_ZONES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Technic',
            fields=[
                ('technicid', models.AutoField(db_column='TechnicID', db_comment='ID техника', primary_key=True, serialize=False)),
                ('firstname', models.CharField(blank=True, db_column='FirstName', db_comment='Имя', max_length=60, null=True)),
                ('middlename', models.CharField(blank=True, db_column='MiddleName', db_comment='Отчество', max_length=70, null=True)),
                ('lastname', models.CharField(blank=True, db_column='LastName', db_comment='Фамилия', max_length=80, null=True)),
                ('info', models.CharField(blank=True, db_column='Info', db_comment='Примечания', max_length=60, null=True)),
            ],
            options={
                'db_table': 'TECHNIC',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Translit',
            fields=[
                ('r', models.CharField(db_column='R', max_length=10, primary_key=True, serialize=False)),
                ('l', models.CharField(db_column='L', max_length=10)),
            ],
            options={
                'db_table': 'Translit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Unittype',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('info', models.CharField(db_column='INFO', max_length=50, unique=True)),
                ('lost', models.IntegerField(blank=True, db_column='LOST', null=True)),
                ('test', models.IntegerField(blank=True, db_column='TEST', db_comment='Временной интервал выхода пере', null=True)),
            ],
            options={
                'db_table': 'UNITTYPE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Unstay',
            fields=[
                ('sectionid', models.IntegerField(db_column='SectionID', primary_key=True, serialize=False)),
                ('smsdone', models.IntegerField(blank=True, db_column='SMSDone', null=True)),
            ],
            options={
                'db_table': 'UNSTAY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('userid', models.AutoField(db_column='UserID', db_comment='ID оператора', primary_key=True, serialize=False)),
                ('username', models.CharField(db_column='UserName', db_comment='Логин оператора', max_length=50, unique=True)),
                ('password', models.CharField(db_column='Password', db_comment='Пароль оператора', max_length=50)),
                ('info', models.CharField(blank=True, db_column='Info', db_comment='Информация об операторе (приме', max_length=60, null=True)),
                ('rights', models.IntegerField(db_column='Rights', db_comment='права оператора')),
            ],
            options={
                'db_table': 'USERS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Watche',
            fields=[
                ('eventid', models.AutoField(db_column='EventID', db_comment='ID события', primary_key=True, serialize=False)),
                ('time', models.DateTimeField(db_column='Time', db_comment='Дата/время события')),
                ('type', models.IntegerField(db_column='Type', db_comment='Тип снятия или постановки на о')),
                ('responsibleid', models.IntegerField(db_column='ResponsibleID', db_comment='ID отвественного лица снявшего')),
                ('userid', models.IntegerField(blank=True, db_column='UserID', db_comment='Код оператора', null=True)),
                ('sectionid', models.IntegerField(db_column='SectionID', db_comment='ID раздела')),
                ('realtime', models.DateTimeField(blank=True, db_column='RealTime', null=True)),
            ],
            options={
                'db_table': 'WATCHE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Webusers',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=50, unique=True)),
                ('password', models.CharField(db_column='Password', max_length=50)),
                ('appname', models.CharField(db_column='AppName', max_length=50)),
                ('fio', models.CharField(blank=True, db_column='FIO', max_length=250, null=True)),
                ('phone', models.CharField(blank=True, db_column='Phone', max_length=20, null=True)),
                ('flag', models.IntegerField(blank=True, db_column='Flag', null=True)),
            ],
            options={
                'db_table': 'WebUsers',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WeekShedule',
            fields=[
                ('sectionid', models.IntegerField(db_column='SectionID', primary_key=True, serialize=False)),
                ('wd', models.IntegerField(db_column='WD')),
                ('start', models.DateTimeField(db_column='START')),
                ('end', models.DateTimeField(db_column='END')),
            ],
            options={
                'db_table': 'WEEK_SHEDULE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WeekSheduleLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sectionid', models.IntegerField(blank=True, db_column='SectionID', null=True)),
                ('wdu', models.IntegerField(blank=True, db_column='WDU', null=True)),
                ('startu', models.DateTimeField(blank=True, db_column='STARTU', null=True)),
                ('endu', models.DateTimeField(blank=True, db_column='ENDU', null=True)),
                ('wdd', models.IntegerField(blank=True, db_column='WDD', null=True)),
                ('startd', models.DateTimeField(blank=True, db_column='STARTD', null=True)),
                ('endd', models.DateTimeField(blank=True, db_column='ENDD', null=True)),
                ('userip', models.CharField(blank=True, db_column='USERIP', max_length=50, null=True)),
                ('username', models.CharField(blank=True, db_column='USERNAME', max_length=256, null=True)),
                ('userhost', models.CharField(blank=True, db_column='USERHOST', max_length=256, null=True)),
                ('appname', models.CharField(blank=True, db_column='APPNAME', max_length=256, null=True)),
                ('op', models.CharField(blank=True, db_column='OP', max_length=1, null=True)),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
            ],
            options={
                'db_table': 'WEEK_SHEDULE_LOG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Workplaces',
            fields=[
                ('placeid', models.AutoField(db_column='PlaceID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=50)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
            ],
            options={
                'db_table': 'WORKPLACES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Zonekinds',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='NAME', db_comment='Вид зоны (короткозамкнутая)', max_length=100)),
                ('oldid', models.IntegerField(blank=True, db_column='OLDID', null=True)),
                ('ena', models.IntegerField(blank=True, db_column='ENA', null=True)),
            ],
            options={
                'db_table': 'ZONEKINDS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Zones',
            fields=[
                ('zoneid', models.AutoField(db_column='ZoneID', db_comment='ID зоны', primary_key=True, serialize=False)),
                ('zonenumber', models.IntegerField(db_column='ZoneNumber', db_comment='Логический номер зоны')),
                ('type', models.IntegerField(db_column='Type', db_comment='Тип зоны по обслуживанию')),
                ('kind', models.IntegerField(db_column='Kind', db_comment='Тип зоны аппратный (нормально ')),
                ('eventtype', models.IntegerField(blank=True, db_column='EventType', db_comment='Тип сообщения (E307,R307 и про', null=True)),
                ('delaytime', models.IntegerField(db_column='DelayTime', db_comment='Задержка на тревогу??')),
                ('info', models.CharField(blank=True, db_column='Info', db_comment='Описание зоны', max_length=255, null=True)),
                ('flags', models.IntegerField(db_column='Flags', db_comment='Может ли зона быть в разных ра')),
            ],
            options={
                'db_table': 'ZONES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ZonesLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zoneid', models.IntegerField(blank=True, db_column='ZoneID', null=True)),
                ('cardidu', models.IntegerField(blank=True, db_column='CARDIDU', null=True)),
                ('sectionidu', models.IntegerField(blank=True, db_column='SectionIDU', null=True)),
                ('zonenumberu', models.IntegerField(blank=True, db_column='ZoneNumberU', null=True)),
                ('typeu', models.IntegerField(blank=True, db_column='TypeU', null=True)),
                ('kindu', models.IntegerField(blank=True, db_column='KindU', null=True)),
                ('delaytimeu', models.IntegerField(blank=True, db_column='DelayTimeU', null=True)),
                ('flagsu', models.IntegerField(blank=True, db_column='FlagsU', null=True)),
                ('cardidd', models.IntegerField(blank=True, db_column='CARDIDD', null=True)),
                ('sectionidd', models.IntegerField(blank=True, db_column='SectionIDD', null=True)),
                ('zonenumberd', models.IntegerField(blank=True, db_column='ZoneNumberD', null=True)),
                ('typed', models.IntegerField(blank=True, db_column='TypeD', null=True)),
                ('kindd', models.IntegerField(blank=True, db_column='KindD', null=True)),
                ('delaytimed', models.IntegerField(blank=True, db_column='DelayTimeD', null=True)),
                ('flagsd', models.IntegerField(blank=True, db_column='FlagsD', null=True)),
                ('userip', models.CharField(blank=True, db_column='USERIP', max_length=50, null=True)),
                ('username', models.CharField(blank=True, db_column='USERNAME', max_length=256, null=True)),
                ('userhost', models.CharField(blank=True, db_column='USERHOST', max_length=256, null=True)),
                ('appname', models.CharField(blank=True, db_column='APPNAME', max_length=256, null=True)),
                ('op', models.CharField(blank=True, db_column='OP', max_length=1, null=True)),
                ('dt', models.DateTimeField(blank=True, db_column='DT', null=True)),
                ('infou', models.CharField(blank=True, db_column='InfoU', max_length=255, null=True)),
                ('infod', models.CharField(blank=True, db_column='InfoD', max_length=255, null=True)),
            ],
            options={
                'db_table': 'ZONES_LOG',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Zonetypes',
            fields=[
                ('id', models.AutoField(db_column='ID', db_comment='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='NAME', db_comment='Описание зоны', max_length=100)),
                ('oldid', models.IntegerField(blank=True, db_column='OLDID', null=True)),
                ('ena', models.IntegerField(blank=True, db_column='ENA', null=True)),
            ],
            options={
                'db_table': 'ZONETYPES',
                'managed': False,
            },
        ),
    ]
